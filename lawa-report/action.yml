name: Phrase License Report
description: Generates a report of the licenses used within your dependencies with lawa
inputs:
  ruby-version:
    description: 'The Ruby version to use'
    required: false
    default: '3.1.3'
  ruby-bundler-version:
    description: 'The Ruby bundler version to use'
    required: false
    default: '2.1.4'
  working-directory:
    description: 'The working directory to run lawa in'
    required: false
    default: .
  decisions-file:
    description: 'The path to the license decisions file'
    required: false
    default: .license-decisions.yml
  github-token:
    description: 'The GitHub token to read phrase/lawa repository'
    required: true
  package-managers:
    description: 'The package managers to check licenses for'
    required: true
  columns:
    description: 'The columns to include in the report'
    required: false
    default: 'project_name name use_case version licenses authors package_manager'

runs:
  using: "composite"
  steps:
    - name: Set up Ruby
      uses: ruby/setup-ruby@4a9ddd6f338a97768b8006bf671dfbad383215f4
      with:
        ruby-version: ${{ inputs.ruby-version }}
    - name: Install compatible bundler version
      shell: bash
      run: gem install bundler:${{ inputs.ruby-bundler-version }}
    - name: Install lawa
      shell: bash
      run: |
        cd ${{ inputs.working-directory }}
        touch Gemfile.lawa
        echo "source 'https://rubygems.org'" >> Gemfile.lawa
        echo -e "gem 'lawa', github: 'phrase/lawa'" >> Gemfile.lawa
        bundle _${{ inputs.ruby-bundler-version }}_ config unset deployment
        BUNDLE_GEMFILE=Gemfile.lawa bundle _${{ inputs.ruby-bundler-version }}_ install
      env:
        BUNDLE_GITHUB__COM: x-access-token:${{ inputs.github-token }}
    - name: Run lawa
      shell: bash
      run: |
        cd ${{ inputs.working-directory }}
        BUNDLE_GEMFILE=Gemfile.lawa bundle _${{ inputs.ruby-bundler-version }}_ exec lawa report --format csv --columns ${{ inputs.columns }} --enabled-package-managers ${{ inputs.package-managers }} --decisions-file=${{ inputs.decisions-file }} --save report.csv
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
    - name: Store report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: lawa-report.csv
        path: report.csv
